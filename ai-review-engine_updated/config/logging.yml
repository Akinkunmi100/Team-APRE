# Logging Configuration

version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: "%(asctime)s %(name)s %(levelname)s %(message)s %(pathname)s %(lineno)d"
  detailed:
    format: "%(asctime)s [%(levelname)s] %(name)s:%(lineno)d - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout

  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/app.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/error.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

  json_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/json.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

loggers:
  api:
    level: INFO
    handlers: [console, file, error_file, json_file]
    propagate: false

  web:
    level: INFO
    handlers: [console, file, error_file, json_file]
    propagate: false

  dashboard:
    level: INFO
    handlers: [console, file, error_file]
    propagate: false

  worker:
    level: INFO
    handlers: [console, file, error_file, json_file]
    propagate: false

  celery:
    level: INFO
    handlers: [console, file, error_file]
    propagate: false

  sqlalchemy.engine:
    level: WARNING
    handlers: [file, error_file]
    propagate: false

  security:
    level: INFO
    handlers: [file, error_file, json_file]
    propagate: false

  performance:
    level: INFO
    handlers: [file, json_file]
    propagate: false

root:
  level: INFO
  handlers: [console, file]

# Log rotation policy
rotation:
  max_bytes: 10485760  # 10MB
  backup_count: 5
  compress: true
  interval: D  # Daily rotation
  at_time: "00:00"  # Rotate at midnight

# Sentry configuration (optional)
sentry:
  enabled: false
  dsn: ""
  environment: production
  traces_sample_rate: 0.1

# Metrics logging
metrics:
  enabled: true
  interval: 60  # Log metrics every 60 seconds
  handlers: [json_file]
  include:
    - cpu_usage
    - memory_usage
    - request_count
    - response_time
    - error_rate
    - database_connections
    - cache_hits
    - queue_size