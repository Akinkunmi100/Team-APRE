openapi: 3.0.3
info:
  title: AI Review Engine API
  description: API documentation for the AI Review Engine
  version: 1.0.0
  contact:
    name: Development Team
    email: support@example.com

servers:
  - url: http://localhost:8000/api/v1
    description: Local development server
  - url: https://api.example.com/v1
    description: Production server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: object

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [user, admin, manager]
        created_at:
          type: string
          format: date-time

    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
        product_id:
          type: string
        user_id:
          type: string
          format: uuid
        rating:
          type: integer
          minimum: 1
          maximum: 5
        text:
          type: string
        sentiment:
          type: string
          enum: [positive, neutral, negative]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ReviewList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Review'
        total:
          type: integer
        page:
          type: integer
        per_page:
          type: integer

    AnalyticsResult:
      type: object
      properties:
        total_reviews:
          type: integer
        average_rating:
          type: number
          format: float
        sentiment_distribution:
          type: object
          properties:
            positive:
              type: integer
            neutral:
              type: integer
            negative:
              type: integer
        trending_topics:
          type: array
          items:
            type: object
            properties:
              topic:
                type: string
              count:
                type: integer
              sentiment:
                type: string

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '409':
          description: User already exists

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
        '401':
          description: Invalid credentials

  /reviews:
    get:
      tags:
        - Reviews
      summary: List reviews
      operationId: listReviews
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
        - name: product_id
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: sentiment
          in: query
          schema:
            type: string
            enum: [positive, neutral, negative]
      responses:
        '200':
          description: List of reviews
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewList'

    post:
      tags:
        - Reviews
      summary: Create a new review
      operationId: createReview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - product_id
                - rating
                - text
              properties:
                product_id:
                  type: string
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                text:
                  type: string
                  minLength: 10
      responses:
        '201':
          description: Review created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /reviews/{review_id}:
    get:
      tags:
        - Reviews
      summary: Get a review by ID
      operationId: getReview
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Review details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: Review not found

    put:
      tags:
        - Reviews
      summary: Update a review
      operationId: updateReview
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                text:
                  type: string
                  minLength: 10
      responses:
        '200':
          description: Review updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Review not found

    delete:
      tags:
        - Reviews
      summary: Delete a review
      operationId: deleteReview
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Review deleted
        '401':
          description: Unauthorized
        '404':
          description: Review not found

  /analytics/reviews:
    get:
      tags:
        - Analytics
      summary: Get review analytics
      operationId: getReviewAnalytics
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
        - name: product_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Analytics results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsResult'
        '401':
          description: Unauthorized

  /health:
    get:
      tags:
        - System
      summary: Check system health
      operationId: checkHealth
      security: []
      responses:
        '200':
          description: System health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  version:
                    type: string
                  components:
                    type: object
                    properties:
                      database:
                        type: string
                      cache:
                        type: string
                      worker:
                        type: string